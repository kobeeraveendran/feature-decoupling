Please run `conda env list` to see a list of all available environments. Use
`source activate <env>` to activate the environment '<env>'. 

[2020-11-22 15:30:22,332] INFO: Launching experiment: ./config/ImageNet_Decoupling_AlexNet.py
[2020-11-22 15:30:22,335] INFO: Loading experiment ImageNet_Decoupling_AlexNet from file: ./config/ImageNet_Decoupling_AlexNet.py
[2020-11-22 15:30:22,335] INFO: Generated logs, snapshots, and model files will be stored on ../_experiments/ImageNet_Decoupling_AlexNet
[2020-11-22 15:30:22,789] INFO: ### ----- Training: train model. ----- ###
[2020-11-22 15:30:24,644] INFO: ### ----- GPU device available, arrays will be copied to cuda. ----- ###
[2020-11-22 15:30:24] INFO: Algorithm options {'data_train_opt': {'batch_size': 512, 'unsupervised': True, 'random_sized_crop': True, 'dataset_name': 'imagenet', 'split': 'train'}, 'data_test_opt': {'batch_size': 512, 'unsupervised': True, 'random_sized_crop': False, 'dataset_name': 'imagenet', 'split': 'val'}, 'max_num_epochs': 200, 'networks': {'feature': {'def_file': 'architectures/AlexNetFeature.py', 'pretrained': None, 'opt': {}, 'optim_params': {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]}}, 'classifier': {'def_file': 'architectures/AlexNetClassifier.py', 'pretrained': None, 'opt': {'num_classes': 2}, 'optim_params': {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]}}, 'norm': {'def_file': 'architectures/LinearTransformationNorm.py', 'pretrained': None, 'opt': {'low_dim': 128, 'num_feat': 1024}, 'optim_params': {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]}}}, 'criterions': {'loss_cls': {'ctype': 'CrossEntropyLoss', 'opt': {'reduce': False}}, 'loss_mse': {'ctype': 'MSELoss', 'opt': None}, 'nce_average': {'ctype': 'NCEAverage', 'opt': {'def_file': 'architectures/NCEAverage.py', 'net_opt': {'low_dim': 128, 'ndata': 1281167, 'nce_k': 4096, 'nce_t': 0.07, 'nce_m': 0.5}}}, 'nce_criterion': {'ctype': 'NCECriterion', 'opt': {'def_file': 'architectures/NCECriterion.py', 'net_opt': {'ndata': 1281167}}}}, 'lambda_loss': {'cls': 1.0, 'mse': 1.0, 'nce': 1.0}, 'gama': 2, 'algorithm_type': 'DecouplingModel', 'exp_dir': '../_experiments/ImageNet_Decoupling_AlexNet', 'disp_step': 1}
[2020-11-22 15:30:24] INFO: Set network feature
[2020-11-22 15:30:24] INFO: ==> Initiliaze network feature from file architectures/AlexNetFeature.py with opts: {}
[2020-11-22 15:30:25] INFO: Set network classifier
[2020-11-22 15:30:25] INFO: ==> Initiliaze network classifier from file architectures/AlexNetClassifier.py with opts: {'num_classes': 2}
[2020-11-22 15:30:25] INFO: Set network norm
[2020-11-22 15:30:25] INFO: ==> Initiliaze network norm from file architectures/LinearTransformationNorm.py with opts: {'low_dim': 128, 'num_feat': 1024}
[2020-11-22 15:30:25] INFO: Initialize criterion[loss_cls]: CrossEntropyLoss with options: {'reduce': False}
/home/cap6614.student6/my-envs/feat-decoupling/lib/python3.6/site-packages/torch/nn/_reduction.py:49: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
[2020-11-22 15:30:25] INFO: Initialize criterion[loss_mse]: MSELoss with options: None
[2020-11-22 15:30:25] INFO: Initialize criterion[nce_average]: NCEAverage with options: {'def_file': 'architectures/NCEAverage.py', 'net_opt': {'low_dim': 128, 'ndata': 1281167, 'nce_k': 4096, 'nce_t': 0.07, 'nce_m': 0.5}}
[2020-11-22 15:30:48] INFO: Initialize criterion[nce_criterion]: NCECriterion with options: {'def_file': 'architectures/NCECriterion.py', 'net_opt': {'ndata': 1281167}}
[2020-11-22 15:30:48] INFO: ==> Initiliaze network NCECriterion from file architectures/NCECriterion.py with opts: {'ndata': 1281167}
[2020-11-22 15:30:54] INFO: Initialize optimizer: sgd with params: {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]} for network: feature
[2020-11-22 15:30:54] INFO: Initialize optimizer: sgd with params: {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]} for network: classifier
[2020-11-22 15:30:54] INFO: Initialize optimizer: sgd with params: {'optim_type': 'sgd', 'lr': 0.1, 'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True, 'LUT_lr': [(90, 0.01), (130, 0.001), (190, 0.0001), (210, 1e-05), (230, 0.0001), (245, 1e-05)]} for network: norm
[2020-11-22 15:30:54] INFO: 

[2020-11-22 15:30:54] INFO: Training epoch [  1 / 200]
[2020-11-22 15:30:54] INFO: ==> Set to feature optimizer lr = 0.0100000000
[2020-11-22 15:30:54] INFO: ==> Set to classifier optimizer lr = 0.0100000000
[2020-11-22 15:30:54] INFO: ==> Set to norm optimizer lr = 0.0100000000
[2020-11-22 15:30:54] INFO: Training: ImageNet_Decoupling_AlexNet
[2020-11-22 15:30:54] INFO: ==> Dataset: imagenet_train [100000 images]
[2020-11-22 15:30:54] INFO: ==> Iteration steps in one epoch: 196 [batch size 512]
  0%|          | 0/196 [00:00<?, ?it/s]Moving NCE To CUDA.
Moving AliasMethod To CUDA.
  0%|          | 0/196 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "/home/cap6614.student6/feature-decoupling/pytorch_feature_decoupling/main.py", line 89, in <module>
    algorithm.solve(dloader_train, dloader_test)
  File "/lustre/fs0/home/cap6614.student6/feature-decoupling/pytorch_feature_decoupling/algorithms/Algorithm.py", line 322, in solve
    train_stats = self.run_train_epoch(data_loader_train, self.curr_epoch)
  File "/lustre/fs0/home/cap6614.student6/feature-decoupling/pytorch_feature_decoupling/algorithms/Algorithm.py", line 350, in run_train_epoch
    for idx, batch in enumerate(tqdm(data_loader(epoch), total=len(data_loader))):
  File "/home/cap6614.student6/my-envs/feat-decoupling/lib/python3.6/site-packages/tqdm/std.py", line 1171, in __iter__
    for obj in iterable:
  File "/home/cap6614.student6/my-envs/feat-decoupling/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 637, in __next__
    return self._process_next_batch(batch)
  File "/home/cap6614.student6/my-envs/feat-decoupling/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 658, in _process_next_batch
    raise batch.exc_type(batch.exc_msg)
RuntimeError: Traceback (most recent call last):
  File "/home/cap6614.student6/my-envs/feat-decoupling/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 138, in _worker_loop
    samples = collate_fn([dataset[i] for i in batch_indices])
  File "/lustre/fs0/home/cap6614.student6/feature-decoupling/pytorch_feature_decoupling/dataloader.py", line 176, in _collate_fun
    batch[2] = batch[2].view([batch_size*rotations])
RuntimeError: shape '[1024]' is invalid for input of size 2048


real	0m36.105s
user	0m34.254s
sys	0m5.933s

Ending script...
Sun Nov 22 15:30:57 EST 2020
